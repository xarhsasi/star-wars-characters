"""optional film fields

Revision ID: b14559c981d4
Revises: 54e5acfb1f78
Create Date: 2025-09-17 18:19:11.292947

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "b14559c981d4"
down_revision: Union[str, Sequence[str], None] = "54e5acfb1f78"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("films", "opening_crawl", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("films", "director", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("films", "producer", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column(
        "films", "release_date", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "films", "release_date", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.alter_column("films", "producer", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("films", "director", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "films", "opening_crawl", existing_type=sa.VARCHAR(), nullable=False
    )
    # ### end Alembic commands ###
